# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import example_pb2 as example__pb2


class FooApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetFoo = channel.unary_unary(
        '/example.FooApi/GetFoo',
        request_serializer=example__pb2.FooRequest.SerializeToString,
        response_deserializer=example__pb2.Foo.FromString,
        )
    self.GetFooRequestStream = channel.stream_unary(
        '/example.FooApi/GetFooRequestStream',
        request_serializer=example__pb2.FooRequest.SerializeToString,
        response_deserializer=example__pb2.Foo.FromString,
        )
    self.GetFooResponseStream = channel.unary_stream(
        '/example.FooApi/GetFooResponseStream',
        request_serializer=example__pb2.FooRequest.SerializeToString,
        response_deserializer=example__pb2.Foo.FromString,
        )
    self.GetFooBidirectional = channel.stream_stream(
        '/example.FooApi/GetFooBidirectional',
        request_serializer=example__pb2.FooRequest.SerializeToString,
        response_deserializer=example__pb2.Foo.FromString,
        )


class FooApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetFoo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFooRequestStream(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFooResponseStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFooBidirectional(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FooApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetFoo': grpc.unary_unary_rpc_method_handler(
          servicer.GetFoo,
          request_deserializer=example__pb2.FooRequest.FromString,
          response_serializer=example__pb2.Foo.SerializeToString,
      ),
      'GetFooRequestStream': grpc.stream_unary_rpc_method_handler(
          servicer.GetFooRequestStream,
          request_deserializer=example__pb2.FooRequest.FromString,
          response_serializer=example__pb2.Foo.SerializeToString,
      ),
      'GetFooResponseStream': grpc.unary_stream_rpc_method_handler(
          servicer.GetFooResponseStream,
          request_deserializer=example__pb2.FooRequest.FromString,
          response_serializer=example__pb2.Foo.SerializeToString,
      ),
      'GetFooBidirectional': grpc.stream_stream_rpc_method_handler(
          servicer.GetFooBidirectional,
          request_deserializer=example__pb2.FooRequest.FromString,
          response_serializer=example__pb2.Foo.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'example.FooApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
